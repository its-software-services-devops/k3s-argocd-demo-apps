apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: console
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: console
  serviceName: console
  template:
    metadata:
      labels:
        app: console
    spec:
      serviceAccountName: console
      volumes:
      - name: home
        emptyDir: {}
      - name: tor
        emptyDir: {}
      - name: data
        emptyDir: {}
      containers:
      - image: {{ .Values.ssh.image.name }}:{{ .Values.ssh.image.version }}
        imagePullPolicy: Always
        name: openssh-server
        resources: {}
        env:
        - name: PUID
          value: '1000'
        - name: PGID
          value: '1000'
        - name: SUDO_ACCESS
          value: 'false'
        - name: PASSWORD_ACCESS
          value: 'true'
        - name: TZ
          value: Asia/Bangkok
        - name: USER_NAME
          valueFrom:
            secretKeyRef:
              name: ssh-credentials
              key: SSH_USER
        - name: USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ssh-credentials
              key: SSH_PASSWORD
        securityContext:
          allowPrivilegeEscalation: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /config
          name: home
      - image: {{ .Values.proxy.image.name }}:{{ .Values.proxy.image.version }}
        imagePullPolicy: Always
        name: proxy-server
        resources: {}
        env:
        - name: TOR_SERVICE
          value: 'true'
        - name: TOR_SERVICE_HOSTS
          value: 'services=22:127.0.0.1:2222,8080:loki-log-grafana.loki-log.svc.cluster.local:80,8081:monitoring-production-grafana.monitoring.svc.cluster.local:80,8443:argocd-server.argocd.svc.cluster.local:443'
        volumeMounts: []
      restartPolicy: Always
      securityContext: {}
